Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o (exit)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
                              1motor.o (__tablejump2__)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
                              1motor.o (__do_copy_data)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
                              1motor.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

button              0x2               1motor.o
data                0x2               1motor.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 .text          0x00000000        0x0 1motor.o
 .bss           0x00000000        0x0 1motor.o
 .bss.runflag   0x00000000        0x2 1motor.o
 .text          0x00000000        0x0 r.o
 .bss           0x00000000        0x0 r.o
 .text.lcd_data
                0x00000000       0x14 r.o
 .text.LCD_GOTOXY
                0x00000000       0x14 r.o
 .text.lcd_getxy
                0x00000000        0x8 r.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00100000         xr
data             0x00800200         0x0000fe00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
LOAD 1motor.o
LOAD r.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6\libm.a
END GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6\libc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9d6
 *(.vectors)
 .vectors       0x00000000       0xe4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table.main
                0x000000e4       0x2a 1motor.o
 *(.progmem*)
                0x0000010e                . = ALIGN (0x2)
                0x0000010e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000010e        0x0 linker stubs
 *(.trampolines*)
                0x0000010e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000010e                __ctors_start = .
 *(.ctors)
                0x0000010e                __ctors_end = .
                0x0000010e                __dtors_start = .
 *(.dtors)
                0x0000010e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000010e        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x0000010e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000010e       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000011e       0x1a c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
                0x0000011e                __do_copy_data
 .init4         0x00000138       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
                0x00000138                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000148        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000014c        0x2 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x0000014c                __vector_38
                0x0000014c                __vector_22
                0x0000014c                __vector_28
                0x0000014c                __vector_1
                0x0000014c                __vector_32
                0x0000014c                __vector_34
                0x0000014c                __vector_24
                0x0000014c                __vector_12
                0x0000014c                __vector_55
                0x0000014c                __vector_46
                0x0000014c                __bad_interrupt
                0x0000014c                __vector_6
                0x0000014c                __vector_31
                0x0000014c                __vector_35
                0x0000014c                __vector_39
                0x0000014c                __vector_3
                0x0000014c                __vector_23
                0x0000014c                __vector_30
                0x0000014c                __vector_45
                0x0000014c                __vector_25
                0x0000014c                __vector_11
                0x0000014c                __vector_54
                0x0000014c                __vector_13
                0x0000014c                __vector_17
                0x0000014c                __vector_19
                0x0000014c                __vector_56
                0x0000014c                __vector_7
                0x0000014c                __vector_49
                0x0000014c                __vector_41
                0x0000014c                __vector_43
                0x0000014c                __vector_27
                0x0000014c                __vector_5
                0x0000014c                __vector_33
                0x0000014c                __vector_47
                0x0000014c                __vector_52
                0x0000014c                __vector_37
                0x0000014c                __vector_4
                0x0000014c                __vector_44
                0x0000014c                __vector_51
                0x0000014c                __vector_9
                0x0000014c                __vector_2
                0x0000014c                __vector_21
                0x0000014c                __vector_15
                0x0000014c                __vector_29
                0x0000014c                __vector_40
                0x0000014c                __vector_8
                0x0000014c                __vector_26
                0x0000014c                __vector_48
                0x0000014c                __vector_14
                0x0000014c                __vector_53
                0x0000014c                __vector_10
                0x0000014c                __vector_16
                0x0000014c                __vector_18
                0x0000014c                __vector_20
                0x0000014c                __vector_42
                0x0000014e                . = ALIGN (0x2)
 *(.text.*)
 .text.init_servo
                0x0000014e       0x1a 1motor.o
                0x0000014e                init_servo
 .text.servo    0x00000168       0x32 1motor.o
                0x00000168                servo
 .text.init_bot
                0x0000019a       0x3e 1motor.o
                0x0000019a                init_bot
 .text.init_usart
                0x000001d8       0x22 1motor.o
                0x000001d8                init_usart
 .text.servo_right
                0x000001fa       0x14 1motor.o
                0x000001fa                servo_right
 .text.servo_left
                0x0000020e       0x14 1motor.o
                0x0000020e                servo_left
 .text.servo_stop
                0x00000222       0x10 1motor.o
                0x00000222                servo_stop
 .text.Move_Front
                0x00000232        0x8 1motor.o
                0x00000232                Move_Front
 .text.Move_Right
                0x0000023a        0x8 1motor.o
                0x0000023a                Move_Right
 .text.Move_Left
                0x00000242        0x8 1motor.o
                0x00000242                Move_Left
 .text.Move_Back
                0x0000024a        0x8 1motor.o
                0x0000024a                Move_Back
 .text.Move_Stop
                0x00000252        0x4 1motor.o
                0x00000252                Move_Stop
 .text.init_actuators_gripper
                0x00000256       0x2c 1motor.o
                0x00000256                init_actuators_gripper
 .text.actuator1_up
                0x00000282       0x12 1motor.o
                0x00000282                actuator1_up
 .text.actuator1_down
                0x00000294       0x12 1motor.o
                0x00000294                actuator1_down
 .text.actuator1_stop
                0x000002a6        0xc 1motor.o
                0x000002a6                actuator1_stop
 .text.actuator2_up
                0x000002b2       0x1c 1motor.o
                0x000002b2                actuator2_up
 .text.actuator2_down
                0x000002ce       0x1c 1motor.o
                0x000002ce                actuator2_down
 .text.actuator2_stop
                0x000002ea       0x1c 1motor.o
                0x000002ea                actuator2_stop
 .text.gripper_clutch_open
                0x00000306        0xa 1motor.o
                0x00000306                gripper_clutch_open
 .text.gripper_clutch_close
                0x00000310        0xa 1motor.o
                0x00000310                gripper_clutch_close
 .text.gripper_stop
                0x0000031a        0x4 1motor.o
                0x0000031a                gripper_stop
 .text.init_bomb_clutch
                0x0000031e       0x2a 1motor.o
                0x0000031e                init_bomb_clutch
 .text.bomb_clutch_open
                0x00000348       0x1c 1motor.o
                0x00000348                bomb_clutch_open
 .text.bomb_clutch_close
                0x00000364       0x1c 1motor.o
                0x00000364                bomb_clutch_close
 .text.stop_bomb_clutch
                0x00000380       0x16 1motor.o
                0x00000380                stop_bomb_clutch
 .text.init_wrist
                0x00000396       0x32 1motor.o
                0x00000396                init_wrist
 .text.rotate_wrist_cw
                0x000003c8        0xa 1motor.o
                0x000003c8                rotate_wrist_cw
 .text.rotate_wrist_ccw
                0x000003d2        0xa 1motor.o
                0x000003d2                rotate_wrist_ccw
 .text.stop_wrist_rotate
                0x000003dc        0x6 1motor.o
                0x000003dc                stop_wrist_rotate
 .text.wrist_up
                0x000003e2       0x16 1motor.o
                0x000003e2                wrist_up
 .text.wrist_down
                0x000003f8       0x1c 1motor.o
                0x000003f8                wrist_down
 .text.stop_wrist_ud
                0x00000414       0x16 1motor.o
                0x00000414                stop_wrist_ud
 .text.__vector_36
                0x0000042a       0xa8 1motor.o
                0x0000042a                __vector_36
 .text.__vector_50
                0x000004d2       0xae 1motor.o
                0x000004d2                __vector_50
 .text.main     0x00000580      0x2ce 1motor.o
                0x00000580                main
 .text.toggle_e
                0x0000084e        0x8 r.o
 .text.lcd_write
                0x00000856       0x5a r.o
 .text.lcd_read
                0x000008b0       0x4a r.o
 .text.lcd_waitbusy
                0x000008fa       0x14 r.o
 .text.lcd_command
                0x0000090e       0x10 r.o
                0x0000090e                lcd_command
 .text.LCD_CLRSCR
                0x0000091e        0x4 r.o
                0x0000091e                LCD_CLRSCR
 .text.LCD_HOME_POS
                0x00000922        0x4 r.o
                0x00000922                LCD_HOME_POS
 .text.LCD_PUTC
                0x00000926       0x24 r.o
                0x00000926                LCD_PUTC
 .text.LCD_PRINT
                0x0000094a       0x1a r.o
                0x0000094a                LCD_PRINT
 .text.LCD_INIT
                0x00000964       0x62 r.o
                0x00000964                LCD_INIT
 .text.libgcc   0x000009c6        0xc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
                0x000009c6                __tablejump2__
                0x000009ca                __tablejump__
                0x000009d2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009d2        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
                0x000009d2                _exit
                0x000009d2                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009d2        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 *(.fini0)
                0x000009d6                _etext = .

.data           0x00800200       0xd2 load address 0x000009d6
                0x00800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 .data          0x00800200        0x0 1motor.o
 .data          0x00800200        0x0 r.o
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_tablejump.o)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_copy_data.o)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800200       0xd2 1motor.o
                                 0xdd (size before relaxing)
 *(.gnu.linkonce.d*)
                0x008002d2                . = ALIGN (0x2)
                0x008002d2                _edata = .
                0x008002d2                PROVIDE (__data_end, .)

.bss            0x008002d2       0x11
                0x008002d2                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.crap_flag
                0x008002d2        0x2 1motor.o
                0x008002d2                crap_flag
 .bss.flag      0x008002d4        0x2 1motor.o
                0x008002d4                flag
 .bss.data_rxd_flag
                0x008002d6        0x1 1motor.o
                0x008002d6                data_rxd_flag
 .bss.max_count
                0x008002d7        0x4 1motor.o
                0x008002d7                max_count
 .bss.count     0x008002db        0x4 1motor.o
                0x008002db                count
 *(COMMON)
 COMMON         0x008002df        0x4 1motor.o
                0x008002df                button
                0x008002e1                data
                0x008002e3                PROVIDE (__bss_end, .)
                0x000009d6                __data_load_start = LOADADDR (.data)
                0x00000aa8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002e3        0x0
                0x008002e3                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002e3                PROVIDE (__noinit_end, .)
                0x008002e3                _end = .
                0x008002e3                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6e4
 *(.stab)
 .stab          0x00000000      0x6e4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f 1motor.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 r.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x1b8
 *(.debug_aranges)
 .debug_aranges
                0x00000000      0x138 1motor.o
 .debug_aranges
                0x00000138       0x80 r.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000     0x139e
 *(.debug_info)
 .debug_info    0x00000000      0xe4c 1motor.o
 .debug_info    0x00000e4c      0x552 r.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x418
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x214 1motor.o
 .debug_abbrev  0x00000214      0x204 r.o

.debug_line     0x00000000      0xee0
 *(.debug_line)
 .debug_line    0x00000000      0x9d3 1motor.o
 .debug_line    0x000009d3      0x50d r.o

.debug_frame    0x00000000      0x3dc
 *(.debug_frame)
 .debug_frame   0x00000000      0x2bc 1motor.o
 .debug_frame   0x000002bc      0x120 r.o

.debug_str      0x00000000      0x3cf
 *(.debug_str)
 .debug_str     0x00000000      0x324 1motor.o
                                0x373 (size before relaxing)
 .debug_str     0x00000324       0xab r.o
                                0x175 (size before relaxing)

.debug_loc      0x00000000      0xa8c
 *(.debug_loc)
 .debug_loc     0x00000000      0x670 1motor.o
 .debug_loc     0x00000670      0x41c r.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000      0x198
 *(.debug_ranges)
 .debug_ranges  0x00000000      0x128 1motor.o
 .debug_ranges  0x00000128       0x70 r.o

.debug_macro
 *(.debug_macro)
OUTPUT(1motor.elf elf32-avr)
LOAD linker stubs
